# Data

## Description
We are using the New York City Taxi and Limousine Commission (TLC) trip record dataset. [(Link to dataset)](https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page) The dataset is collected by technology providers authorized under the Taxicab & Livery Passenger Enhancement Programs (TPEP/LPEP), then provided to the NYC TLC. Data is available from 2009 through present and includes pick-up and drop-off dates, times, and locations, trip distances, itemized fares, rate types, payment types, and driver-reported passenger counts. It is updated monthly with a two-month delay, with each file containing a month of data. For each month, there are yellow taxi, green taxi, for-hire vehicle, and high volume for-hire vehicle trip record files. The data comes in PARQUET format with 19 columns. The number of rows depends on the number of trips that month. We will download the monthly data directly from the NYC TLC website and combine it in R.

## Missing value analysis

The columns `passenger_count`, `RatecodeID`, `store_and_fwd_flag`, `congestion_surcharge`, and `airport_fee` are all missing values for the same 1,309,356 rows. These dates all occur between December 31, 2022 and December 31, 2023.

```{r include = FALSE}
# load packages
library(arrow)
library(ggplot2)
library(dplyr)
library(forcats)
library(lubridate)
library(tidyr)
```

```{r}
# read in data and merge
path <- 'data/raw'
filenames <- list.files(path)
merged <- read_parquet(paste0(path, '/', filenames[1]))
for (file in filenames[2:length(filenames)]) {
  prq <- read_parquet(paste0(path, '/', file))
  colnames(prq) <- colnames(merged) # this is just for discrepancies in capitalization of colnames
  merged <- rbind(merged, prq)
}
```



```{r}
# check for missing values
missing_per_col <- as.data.frame(colSums(is.na(merged)))
colnames(missing_per_col) <- 'num_missing'
missing_per_col <- missing_per_col |> 
  mutate('col' = rownames(missing_per_col)) |> 
  arrange(-num_missing)
rownames(missing_per_col) <- c() 

# examine if all missing in same rows
na_rows <- merged |> 
  filter(is.na(RatecodeID))

# get names of rows with missing values
missing_cols <- (missing_per_col |> 
  filter(num_missing > 0))$col
```

```{r}
# graphs
# plot histogram of missing values
ggplot(missing_per_col, aes(x = fct_inorder(as.factor(col)), y = num_missing)) +
  geom_col(fill = 'cornflowerblue') +
  labs(x = 'Column',
       y = 'Number of missing values',
       title = 'Missing Values by Column') +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
```
This Missingness Correlation Matrix visualizes how the missing values in different columns are related. Each tile represents the correlation between the missingness of two features, with the diagonal always being 1 (a column perfectly correlates with itself). In our data, most tiles are gray which indicates weak or no correlation between missingness in most features. White tiles suggest that correlations could not be calculated (likely due to insufficient overlap). This implies that missing values in the dataset are largely independent across features, with no strong patterns of systematic missingness.

```{r}
# create a logical matrix of missingness
missing_matrix <- is.na(merged)

# calculate correlations between missingness
missing_corr <- cor(missing_matrix, use = "pairwise.complete.obs")

# convert to a data frame for visualization
missing_corr_df <- as.data.frame(as.table(missing_corr))
colnames(missing_corr_df) <- c("Column1", "Column2", "Correlation")

# plot correlation heatmap
ggplot(missing_corr_df, aes(x = Column1, y = Column2, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, name = "Correlation") +
  labs(title = "Missingness Correlation Matrix", x = "Column", y = "Column") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        axis.text.y = element_text(angle = 45, vjust = 1, hjust = 1))
```

